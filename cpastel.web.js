function typeOf(val){return Object.getPrototypeOf(val).constructor.name.toLowerCase();};function CPastel(){let colourCodes = {default: '0',black: '30',red: '31',green: '32',yellow: '33',blue: '34',magenta: '35',cyan: '36',white: '37'};let styleCodes = {default: '0',bold: '1',italic: '3',underline: '4',strikethrough: '9'};let allowedStyles = Object.keys(styleCodes);let allowedColours = Object.keys(colourCodes);this.format = (val='',styles={color: "default",style: "default"},endWithReset=true) => {styles.color = (styles.color) ? styles.color : 'default';styles.style = (styles.style) ? styles.style : 'default';if(typeOf(val) === "string"&&typeOf(styles) === "object"&&val.length > 0 &&allowedColours.includes(`${styles.color}`.toLowerCase())&&allowedStyles.includes(`${styles.style}`.toLowerCase())){if(styles.style === "default"){return `\x1b[${colourCodes[styles.color]}m${val}${(endWithReset) ? '\x1b[0m' : ''}`;} else if(styles.color === "default"){return `\x1b[${styleCodes[styles.style]}m${val}${(endWithReset) ? '\x1b[0m' : ''}`;} else{return `\x1b[${styleCodes[styles.style]};${colourCodes[styles.color]}m${val}${(endWithReset) ? '\x1b[0m' : ''}`;}} else{return val;}};this.log = (val='',styles={color: "default",style: "default"}) => {console.log(this.format(val, styles, true));};this.f = (str = "") => {if(!typeOf(str) === "string") return str;let reg = /<[^:]+:[0-4][0-8]>/g;let cases = str.match(reg);if(!cases) return str;let nstr = str;cases.forEach(val => {let valS = val.replace(/#SEM#/g,':').slice(1, -4);let style = Number(val.slice(-3,-2));let colour = Number(val.slice(-2,-1));nstr = nstr.replace(RegExp(val,"g"),this.format(valS, {color: allowedColours[colour], style: allowedStyles[style]}));});return nstr;};}let cpastel = new CPastel();
